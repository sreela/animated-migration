/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.13.4 - 2015-09-03
 * License: MIT
 */
angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.tooltip", "ui.bootstrap.position", "ui.bootstrap.bindHtml", "ui.bootstrap.progressbar"]), angular.module("ui.bootstrap.tpls", ["template/tooltip/tooltip-html-popup.html", "template/tooltip/tooltip-html-unsafe-popup.html", "template/tooltip/tooltip-popup.html", "template/tooltip/tooltip-template-popup.html", "template/progressbar/bar.html", "template/progressbar/progress.html", "template/progressbar/progressbar.html"]), angular.module("ui.bootstrap.tooltip", ["ui.bootstrap.position", "ui.bootstrap.bindHtml"]).provider("$tooltip", function () {
    function t(t) {
        var e = /[A-Z]/g, n = "-";
        return t.replace(e, function (t, e) {
            return (e ? n : "") + t.toLowerCase()
        })
    }

    var e = {placement: "top", animation: !0, popupDelay: 0, useContentExp: !1}, n = {
        mouseenter: "mouseleave",
        click: "click",
        focus: "blur",
        none: ""
    }, o = {};
    this.options = function (t) {
        angular.extend(o, t)
    }, this.setTriggers = function (t) {
        angular.extend(n, t)
    }, this.$get = ["$window", "$compile", "$timeout", "$document", "$position", "$interpolate", "$rootScope", "$parse", function (i, r, a, p, l, s, u, c) {
        return function (i, m, d, f) {
            function g(t) {
                var e = (t || f.trigger || d).split(" "), o = e.map(function (t) {
                    return n[t] || t
                });
                return {show: e, hide: o}
            }

            f = angular.extend({}, e, o, f);
            var h = t(i), v = s.startSymbol(), b = s.endSymbol(), $ = "<div " + h + '-popup title="' + v + "title" + b + '" ' + (f.useContentExp ? 'content-exp="contentExp()" ' : 'content="' + v + "content" + b + '" ') + 'placement="' + v + "placement" + b + '" popup-class="' + v + "popupClass" + b + '" animation="animation" is-open="isOpen"origin-scope="origScope" ></div>';
            return {
                restrict: "EA", compile: function () {
                    var t = r($);
                    return function (e, n, o) {
                        function r() {
                            B.isOpen ? d() : s()
                        }

                        function s() {
                            (!A || e.$eval(o[m + "Enable"])) && (w(), B.popupDelay ? H || (H = a(h, B.popupDelay, !1)) : h())
                        }

                        function d() {
                            v(), u.$$phase || u.$digest()
                        }

                        function h() {
                            return H = null, S && (a.cancel(S), S = null), (f.useContentExp ? B.contentExp() : B.content) ? (b(), B.isOpen = !0, L && L.assign(B.origScope, B.isOpen), u.$$phase || B.$apply(), O.css({display: "block"}), void q()) : angular.noop
                        }

                        function v() {
                            B.isOpen = !1, L && L.assign(B.origScope, B.isOpen), a.cancel(H), H = null, a.cancel(D), D = null, B.animation ? S || (S = a($, 500)) : $()
                        }

                        function b() {
                            O && $(), U = B.$new(), O = t(U, function (t) {
                                P ? p.find("body").append(t) : n.after(t)
                            }), f.useContentExp && (U.$watch("contentExp()", function (t) {
                                !t && B.isOpen && v()
                            }), U.$watch(function () {
                                k || (k = !0, U.$$postDigest(function () {
                                    k = !1, B.isOpen && q()
                                }))
                            }))
                        }

                        function $() {
                            S = null, O && (O.remove(), O = null), U && (U.$destroy(), U = null)
                        }

                        function w() {
                            x(), C(), E()
                        }

                        function x() {
                            B.popupClass = o[m + "Class"]
                        }

                        function C() {
                            var t = o[m + "Placement"];
                            B.placement = angular.isDefined(t) ? t : f.placement
                        }

                        function E() {
                            var t = o[m + "PopupDelay"], e = parseInt(t, 10);
                            B.popupDelay = isNaN(e) ? f.popupDelay : e
                        }

                        function y() {
                            var t = o[m + "Trigger"];
                            W(), T = g(t), "none" !== T.show && T.show.forEach(function (t, e) {
                                t === T.hide[e] ? n[0].addEventListener(t, r) : t && (n[0].addEventListener(t, s), n[0].addEventListener(T.hide[e], d))
                            })
                        }

                        var O, U, S, H, D, P = angular.isDefined(f.appendToBody) ? f.appendToBody : !1, T = g(void 0), A = angular.isDefined(o[m + "Enable"]), B = e.$new(!0), k = !1, L = angular.isDefined(o[m + "IsOpen"]) ? c(o[m + "IsOpen"]) : !1, q = function () {
                            O && (D || (D = a(function () {
                                O.css({top: 0, left: 0, width: "auto", height: "auto"});
                                var t = l.position(O), e = l.positionElements(n, O, B.placement, P);
                                e.top += "px", e.left += "px", e.width = t.width + "px", e.height = t.height + "px", O.css(e), D = null
                            }, 0, !1)))
                        };
                        B.origScope = e, B.isOpen = !1, B.contentExp = function () {
                            return e.$eval(o[i])
                        }, f.useContentExp || o.$observe(i, function (t) {
                            B.content = t, !t && B.isOpen ? v() : q()
                        }), o.$observe("disabled", function (t) {
                            H && t && (a.cancel(H), H = null), t && B.isOpen && v()
                        }), o.$observe(m + "Title", function (t) {
                            B.title = t, q()
                        }), o.$observe(m + "Placement", function () {
                            B.isOpen && (C(), q())
                        }), L && e.$watch(L, function (t) {
                            t !== B.isOpen && r()
                        });
                        var W = function () {
                            T.show.forEach(function (t) {
                                n.unbind(t, s)
                            }), T.hide.forEach(function (t) {
                                n.unbind(t, d)
                            })
                        };
                        y();
                        var R = e.$eval(o[m + "Animation"]);
                        B.animation = angular.isDefined(R) ? !!R : f.animation;
                        var I = e.$eval(o[m + "AppendToBody"]);
                        P = angular.isDefined(I) ? I : P, P && e.$on("$locationChangeSuccess", function () {
                            B.isOpen && v()
                        }), e.$on("$destroy", function () {
                            a.cancel(S), a.cancel(H), a.cancel(D), W(), $(), B = null
                        })
                    }
                }
            }
        }
    }]
}).directive("tooltipTemplateTransclude", ["$animate", "$sce", "$compile", "$templateRequest", function (t, e, n, o) {
    return {
        link: function (i, r, a) {
            var p, l, s, u = i.$eval(a.tooltipTemplateTranscludeScope), c = 0, m = function () {
                l && (l.remove(), l = null), p && (p.$destroy(), p = null), s && (t.leave(s).then(function () {
                    l = null
                }), l = s, s = null)
            };
            i.$watch(e.parseAsResourceUrl(a.tooltipTemplateTransclude), function (e) {
                var a = ++c;
                e ? (o(e, !0).then(function (o) {
                    if (a === c) {
                        var i = u.$new(), l = o, d = n(l)(i, function (e) {
                            m(), t.enter(e, r)
                        });
                        p = i, s = d, p.$emit("$includeContentLoaded", e)
                    }
                }, function () {
                    a === c && (m(), i.$emit("$includeContentError", e))
                }), i.$emit("$includeContentRequested", e)) : m()
            }), i.$on("$destroy", m)
        }
    }
}]).directive("tooltipClasses", function () {
    return {
        restrict: "A", link: function (t, e, n) {
            t.placement && e.addClass(t.placement), t.popupClass && e.addClass(t.popupClass), t.animation() && e.addClass(n.tooltipAnimationClass)
        }
    }
}).directive("tooltipPopup", function () {
    return {
        restrict: "EA",
        replace: !0,
        scope: {content: "@", placement: "@", popupClass: "@", animation: "&", isOpen: "&"},
        templateUrl: "template/tooltip/tooltip-popup.html"
    }
}).directive("tooltip", ["$tooltip", function (t) {
    return t("tooltip", "tooltip", "mouseenter")
}]).directive("tooltipTemplatePopup", function () {
    return {
        restrict: "EA",
        replace: !0,
        scope: {contentExp: "&", placement: "@", popupClass: "@", animation: "&", isOpen: "&", originScope: "&"},
        templateUrl: "template/tooltip/tooltip-template-popup.html"
    }
}).directive("tooltipTemplate", ["$tooltip", function (t) {
    return t("tooltipTemplate", "tooltip", "mouseenter", {useContentExp: !0})
}]).directive("tooltipHtmlPopup", function () {
    return {
        restrict: "EA",
        replace: !0,
        scope: {contentExp: "&", placement: "@", popupClass: "@", animation: "&", isOpen: "&"},
        templateUrl: "template/tooltip/tooltip-html-popup.html"
    }
}).directive("tooltipHtml", ["$tooltip", function (t) {
    return t("tooltipHtml", "tooltip", "mouseenter", {useContentExp: !0})
}]).directive("tooltipHtmlUnsafePopup", function () {
    return {
        restrict: "EA",
        replace: !0,
        scope: {content: "@", placement: "@", popupClass: "@", animation: "&", isOpen: "&"},
        templateUrl: "template/tooltip/tooltip-html-unsafe-popup.html"
    }
}).value("tooltipHtmlUnsafeSuppressDeprecated", !1).directive("tooltipHtmlUnsafe", ["$tooltip", "tooltipHtmlUnsafeSuppressDeprecated", "$log", function (t, e, n) {
    return e || n.warn("tooltip-html-unsafe is now deprecated. Use tooltip-html or tooltip-template instead."), t("tooltipHtmlUnsafe", "tooltip", "mouseenter")
}]), angular.module("ui.bootstrap.position", []).factory("$position", ["$document", "$window", function (t, e) {
    function n(t, n) {
        return t.currentStyle ? t.currentStyle[n] : e.getComputedStyle ? e.getComputedStyle(t)[n] : t.style[n]
    }

    function o(t) {
        return "static" === (n(t, "position") || "static")
    }

    var i = function (e) {
        for (var n = t[0], i = e.offsetParent || n; i && i !== n && o(i);)i = i.offsetParent;
        return i || n
    };
    return {
        position: function (e) {
            var n = this.offset(e), o = {top: 0, left: 0}, r = i(e[0]);
            r != t[0] && (o = this.offset(angular.element(r)), o.top += r.clientTop - r.scrollTop, o.left += r.clientLeft - r.scrollLeft);
            var a = e[0].getBoundingClientRect();
            return {
                width: a.width || e.prop("offsetWidth"),
                height: a.height || e.prop("offsetHeight"),
                top: n.top - o.top,
                left: n.left - o.left
            }
        }, offset: function (n) {
            var o = n[0].getBoundingClientRect();
            return {
                width: o.width || n.prop("offsetWidth"),
                height: o.height || n.prop("offsetHeight"),
                top: o.top + (e.pageYOffset || t[0].documentElement.scrollTop),
                left: o.left + (e.pageXOffset || t[0].documentElement.scrollLeft)
            }
        }, positionElements: function (t, e, n, o) {
            var i, r, a, p, l = n.split("-"), s = l[0], u = l[1] || "center";
            i = o ? this.offset(t) : this.position(t), r = e.prop("offsetWidth"), a = e.prop("offsetHeight");
            var c = {
                center: function () {
                    return i.left + i.width / 2 - r / 2
                }, left: function () {
                    return i.left
                }, right: function () {
                    return i.left + i.width
                }
            }, m = {
                center: function () {
                    return i.top + i.height / 2 - a / 2
                }, top: function () {
                    return i.top
                }, bottom: function () {
                    return i.top + i.height
                }
            };
            switch (s) {
                case"right":
                    p = {top: m[u](), left: c[s]()};
                    break;
                case"left":
                    p = {top: m[u](), left: i.left - r};
                    break;
                case"bottom":
                    p = {top: m[s](), left: c[u]()};
                    break;
                default:
                    p = {top: i.top - a, left: c[u]()}
            }
            return p
        }
    }
}]), angular.module("ui.bootstrap.bindHtml", []).value("$bindHtmlUnsafeSuppressDeprecated", !1).directive("bindHtmlUnsafe", ["$log", "$bindHtmlUnsafeSuppressDeprecated", function (t, e) {
    return function (n, o, i) {
        e || t.warn("bindHtmlUnsafe is now deprecated. Use ngBindHtml instead"), o.addClass("ng-binding").data("$binding", i.bindHtmlUnsafe), n.$watch(i.bindHtmlUnsafe, function (t) {
            o.html(t || "")
        })
    }
}]), angular.module("ui.bootstrap.progressbar", []).constant("progressConfig", {
    animate: !0,
    max: 100
}).value("$progressSuppressWarning", !1).controller("ProgressController", ["$scope", "$attrs", "progressConfig", function (t, e, n) {
    var o = this, i = angular.isDefined(e.animate) ? t.$parent.$eval(e.animate) : n.animate;
    this.bars = [], t.max = angular.isDefined(t.max) ? t.max : n.max, this.addBar = function (e, n) {
        i || n.css({transition: "none"}), this.bars.push(e), e.max = t.max, e.$watch("value", function () {
            e.recalculatePercentage()
        }), e.recalculatePercentage = function () {
            e.percent = +(100 * e.value / e.max).toFixed(2);
            var t = o.bars.reduce(function (t, e) {
                return t + e.percent
            }, 0);
            t > 100 && (e.percent -= t - 100)
        }, e.$on("$destroy", function () {
            n = null, o.removeBar(e)
        })
    }, this.removeBar = function (t) {
        this.bars.splice(this.bars.indexOf(t), 1)
    }, t.$watch("max", function () {
        o.bars.forEach(function (e) {
            e.max = t.max, e.recalculatePercentage()
        })
    })
}]).directive("uibProgress", function () {
    return {
        restrict: "EA",
        replace: !0,
        transclude: !0,
        controller: "ProgressController",
        require: "uibProgress",
        scope: {max: "=?"},
        templateUrl: "template/progressbar/progress.html"
    }
}).directive("progress", ["$log", "$progressSuppressWarning", function (t, e) {
    return {
        restrict: "EA",
        replace: !0,
        transclude: !0,
        controller: "ProgressController",
        require: "progress",
        scope: {max: "=?"},
        templateUrl: "template/progressbar/progress.html",
        link: function () {
            e && t.warn("progress is now deprecated. Use uib-progress instead")
        }
    }
}]).directive("uibBar", function () {
    return {
        restrict: "EA",
        replace: !0,
        transclude: !0,
        require: "^uibProgress",
        scope: {value: "=", type: "@"},
        templateUrl: "template/progressbar/bar.html",
        link: function (t, e, n, o) {
            o.addBar(t, e)
        }
    }
}).directive("bar", ["$log", "$progressSuppressWarning", function (t, e) {
    return {
        restrict: "EA",
        replace: !0,
        transclude: !0,
        require: "^progress",
        scope: {value: "=", type: "@"},
        templateUrl: "template/progressbar/bar.html",
        link: function (n, o, i, r) {
            e && t.warn("bar is now deprecated. Use uib-bar instead"), r.addBar(n, o)
        }
    }
}]).directive("progressbar", function () {
    return {
        restrict: "EA",
        replace: !0,
        transclude: !0,
        controller: "ProgressController",
        scope: {value: "=", max: "=?", type: "@"},
        templateUrl: "template/progressbar/progressbar.html",
        link: function (t, e, n, o) {
            o.addBar(t, angular.element(e.children()[0]))
        }
    }
}), angular.module("template/tooltip/tooltip-html-popup.html", []).run(["$templateCache", function (t) {
    t.put("template/tooltip/tooltip-html-popup.html", '<div class="tooltip"\n  tooltip-animation-class="fade"\n  tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind-html="contentExp()"></div>\n</div>\n')
}]), angular.module("template/tooltip/tooltip-html-unsafe-popup.html", []).run(["$templateCache", function (t) {
    t.put("template/tooltip/tooltip-html-unsafe-popup.html", '<div class="tooltip"\n  tooltip-animation-class="fade"\n  tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" bind-html-unsafe="content"></div>\n</div>\n')
}]), angular.module("template/tooltip/tooltip-popup.html", []).run(["$templateCache", function (t) {
    t.put("template/tooltip/tooltip-popup.html", '<div class="tooltip"\n  tooltip-animation-class="fade"\n  tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')
}]), angular.module("template/tooltip/tooltip-template-popup.html", []).run(["$templateCache", function (t) {
    t.put("template/tooltip/tooltip-template-popup.html", '<div class="tooltip"\n  tooltip-animation-class="fade"\n  tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner"\n    tooltip-template-transclude="contentExp()"\n    tooltip-template-transclude-scope="originScope()"></div>\n</div>\n')
}]), angular.module("template/progressbar/bar.html", []).run(["$templateCache", function (t) {
    t.put("template/progressbar/bar.html", '<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" style="min-width: 0;" ng-transclude></div>\n')
}]), angular.module("template/progressbar/progress.html", []).run(["$templateCache", function (t) {
    t.put("template/progressbar/progress.html", '<div class="progress" ng-transclude></div>')
}]), angular.module("template/progressbar/progressbar.html", []).run(["$templateCache", function (t) {
    t.put("template/progressbar/progressbar.html", '<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" style="min-width: 0;" ng-transclude></div>\n</div>\n')
}]);